%tr{:id => dom_id(server, 'row'), :class => cycle("odd", "even")}
  %td
    = icon('accept', 'Yes') if (server.backup_tape || server.backup_db)
    = link_to icon('wait', 'Add'), (server.type == 'VirtualServer' ? edit_virtual_server_path(server) : edit_server_path(server)), :class => "edit" if can? :edit, server if server.backup unless (server.backup_tape || server.backup_db)
    = link_to icon('exclamation', 'No'), (server.type == 'VirtualServer' ? edit_virtual_server_path(server) : edit_server_path(server)), :class => "edit" if can? :edit, server unless (server.backup || server.backup_tape || server.backup_db)
    = icon('tape1', 'Tape') if server.backup_tape
    = icon('db', 'DB') if server.backup_db
  %td
    = link_to server.fqdn, server unless server.fqdn.nil?
    = icon('bullet_star', 'Virtual Machine') if server.type == 'VirtualServer'
    = icon('asterisk_yellow', 'Virtual Host') if server.virtualization_host
  %td
    = link_to server.hardware_model.name, server.hardware_model if server.hardware_model
    &nbsp;
  %td
    = link_to server.operatingsystem.name, server.operatingsystem if server.operatingsystem
    &nbsp;
  %td
    = link_to server.group.name, server.group if server.group
    &nbsp;
  %td
    = link_to server.farm.name, server.farm if server.farm
    &nbsp;
  %td
    - unless server.services.empty?
      %ul
      - server.services.each do |service|
        - if service
          %li
            - if (service.cluster && service.function)
              = "#{link_to service.cluster.name, service.cluster, :id => dom_id(service.cluster, server.id)}:#{link_to service.function.name, service.function, :id => dom_id(service.function, server.id)}"
              :javascript
                $("##{dom_id(service.cluster, server.id)}").qtip({
                  content: 'Other #{service.cluster.name} cluster members:<br>#{service.cluster.assets.uniq.each.map{|a| link_to(a.name, a)}.join(', ')}',
                  show: {
                    solo: true
                  },
                  hide: {
                    delay: 1000,
                    fixed: true
                  },
                  position: {
                    corner: {
                      target: 'topMiddle',
                      tooltip: 'bottomMiddle'
                    }
                  },
                  style: {
                    tip: 'bottomMiddle',
                    name: 'blue'
                  }
                });
              - if service.function.assets.size < 20
                :javascript
                  $("##{dom_id(service.function, server.id)}").qtip({
                    content: 'Other devices with the #{service.function.name} function:<br>#{service.function.assets.uniq.each.map{|a| link_to(a.name, a)}.join(', ')}',
                    show: {
                      solo: true
                    },
                    hide: {
                      delay: 1000,
                      fixed: true
                    },
                    position: {
                      corner: {
                        target: 'topMiddle',
                        tooltip: 'bottomMiddle'
                      }
                    },
                    style: {
                      tip: 'bottomMiddle',
                      name: 'blue'
                    }
                  });
  / %td
  /   - unless server.equipment_rack.nil?
  /     = link_to server.equipment_rack.room.building.name, server.equipment_rack.room.building
  /     ,
  /     = link_to server.equipment_rack.room.name, server.equipment_rack.room
  /     %br
  /     = link_to server.equipment_rack.name, server.equipment_rack
  /   - if server.rack_elevation
  /     = h ", Unit #{server.rack_elevation}"
  /     - unless server.hardware_model.nil?
  /       = (server.hardware_model.rackunits > 0) ? " - #{server.rack_elevation + server.hardware_model.rackunits}" : ""
  %td= h server.state.humanize if server.state
  / %td= h server.last_seen
  / %td= h server.comments.count
  %td.action
    = link_to icon('eye', 'Show'), server, :class => "view"
    = link_to icon('pencil', 'Edit'), (server.type == 'VirtualServer' ? edit_virtual_server_path(server) : edit_server_path(server)), :class => "edit" if can? :edit, server
    = link_to_remote icon('delete', 'Delete'), |
      :url => (server.type == 'Server' ? server_path(server) : virtual_server_path(server)), |
      :confirm => "Are you sure?", |
      :method => "delete", |
      :complete => [ |
        visual_effect(:highlight, dom_id(server, 'row')), |
        visual_effect(:fade, dom_id(server, 'row')) |
      ] if can? :delete, server |
