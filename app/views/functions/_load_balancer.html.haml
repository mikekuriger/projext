%tr{:id => dom_id(load_balancer, 'row'), :class => cycle("odd", "even")}
  %td= h load_balancer.fqdn
  %td= h load_balancer.serial
  %td= h "#{load_balancer.hardware_model.manufacturer.name} #{load_balancer.hardware_model.name}" unless load_balancer.hardware_model.nil?
  %td= link_to load_balancer.group.name, load_balancer.group if load_balancer.group
  %td
    - unless load_balancer.equipment_rack.nil?
      = link_to load_balancer.equipment_rack.room.building.name, load_balancer.equipment_rack.room.building
      , 
      = link_to load_balancer.equipment_rack.room.name, load_balancer.equipment_rack.room
      %br
      = link_to load_balancer.equipment_rack.name, load_balancer.equipment_rack
    - if load_balancer.rack_elevation
      = h ", Unit #{load_balancer.rack_elevation}"
      - unless load_balancer.hardware_model.nil?
        = (load_balancer.hardware_model.rackunits > 0) ? " - #{load_balancer.rack_elevation + load_balancer.hardware_model.rackunits}" : ""
  %td= h load_balancer.state.humanize if load_balancer.state
  %td.action
    = link_to icon('magnifier', 'Show'), load_balancer, :class => "view"
    = link_to icon('pencil', 'Edit'), edit_load_balancer_path(load_balancer), :class => "edit" if can? :edit, load_balancer
    = link_to_remote icon('delete', 'Delete'), |
      :url => load_balancer_path(load_balancer), |
      :confirm => "Are you sure?", |
      :method => "delete", |
      :complete => [ |
        visual_effect(:highlight, dom_id(load_balancer, 'row')), |
        visual_effect(:fade, dom_id(load_balancer, 'row')) |
      ] if can? :delete, load_balancer |
